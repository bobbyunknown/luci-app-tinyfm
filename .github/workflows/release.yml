name: Build IPK

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build IPK
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🛠️ Set up build environment
        run: |
          echo -e "\033[34m🔨 Preparing build environment \033[0m"
          sudo -E apt-get update
          sudo -E apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
            gettext git libncurses5-dev libssl-dev python3-setuptools rsync unzip zlib1g-dev file wget
          echo -e "\033[34m🔧 Configuring environment \033[0m"
          PKG_NAME=$(basename ${{ github.repository }})
          PKG_VERSION=$(grep -oP 'PKG_VERSION:=\K.*' Makefile)
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV

      - name: 📦 Set up OpenWrt SDK
        run: |
          echo -e "\033[34m🗂️ Downloading OpenWrt SDK \033[0m"
          SDK_URL="https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz"
          curl -sL $SDK_URL -o sdk.tar.xz
          mkdir sdk && tar -xf sdk.tar.xz -C sdk --strip-components=1
          echo -e "\033[34m📦 Cloning $PKG_NAME package \033[0m"
          git clone -q https://github.com/${{ github.repository }} sdk/package/${PKG_NAME}

      - name: 📡 Set up SDK feeds
        run: |
          cd sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: ⚙️ Configure & compile IPK
        run: |
          cd sdk
          make defconfig
          make package/openssl/{clean,compile} V=sc
          make package/feeds/packages/php8/{clean,compile} V=sc
          make package/${PKG_NAME}/{clean,compile} V=sc
          echo -e "\033[34m🔍 Searching for IPK file \033[0m"
          find bin/packages -name "${PKG_NAME}*.ipk"

      - name: 📤 Upload IPK
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}
          path: sdk/bin/packages/**/${{ env.PKG_NAME }}*.ipk
          if-no-files-found: error

      - name: 🚀 Generate new tag & release
        uses: softprops/action-gh-release@v1
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Release ${{ env.PKG_VERSION }}
          tag_name: v${{ env.PKG_VERSION }}
          draft: false
          prerelease: false
          files: sdk/bin/packages/**/${{ env.PKG_NAME }}*.ipk
          body: |
            ### Changelog v${{ env.PKG_VERSION }}:
            **📦 New build of ${{ env.PKG_NAME }}**
            **🐞 Bug fixes and improvements**

      - name: 🧹 Clean up
        if: always()
        run: |
          echo -e "\033[34m🧹 Cleaning up build environment \033[0m"
          rm -rf sdk sdk.tar.xz
